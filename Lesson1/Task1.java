package Lesson1;
//1. Реализовать, с учетом ооп подхода, приложение Для проведения исследований с генеалогическим древом.
// Идея: описать некоторое количество компонент,
// например: модель человека компонента хранения связей и отношений между людьми: родитель, ребёнок - классика,
// но можно подумать и про отношение, брат, свекровь, сестра и т. д.
// компонент для проведения исследований дополнительные компоненты, например отвечающие за вывод данных в консоль,
// загрузку и сохранения в файл, получение\построение отдельных моделей человека
// Под “проведением исследования” можно понимать получение всех детей выбранного человека.

// Описать с ООП стиле, логику взаимодействия объектов реального мира между собой: шкаф-человек.
// Какие члены должны быть у каждого из классо (у меня на семинаре студенты пришли к тому,
// чтобы продумать логику взаимодействия жена разрешает открыть дверцу шкафа мужу, после чего эту дверцу можно открыть)



public class Task1 {
    public static void main(String[] args) {

        Man Viktor = new Man("Максимов Виктор Петрович","1938-09-14");
        Man Elena = new Man("Максимова Елена Ивановна","1937-10-28");
        Man Vladimir = new Man("Максимов Владимир Викторович","1964-05-10");
        Man Serzh = new Man("Максимов Сергей Владимирович", "1989-03-06");

        Man Svetlana = new Man("Максимова Светлана Петровна","1964-10-25");
        Man Lidia = new Man("Михайлова Лидия Ивановна","1939-11-22");
        Man Petr = new Man("Михайлов Петр Иванович","1936-12-18");
        Man Ivan = new Man("Михайлов Иван Петрович", "1968-09-03");

        Viktor.addChild(Vladimir, Viktor, Elena);
        Elena.addChild(Vladimir, Viktor, Elena);

        Petr.addChild(Svetlana, Petr, Lidia);
        Lidia.addChild(Svetlana, Petr, Lidia);
        Petr.addChild(Ivan, Petr, Lidia);
        Lidia.addChild(Ivan, Petr, Lidia);

        Vladimir.addChild(Serzh, Vladimir, Svetlana);
        Svetlana.addChild(Serzh, Vladimir, Svetlana);


        System.out.println(Lidia);
    }
}